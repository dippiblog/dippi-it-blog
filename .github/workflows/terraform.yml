name: Terraform Deploy to AWS

on:
  push:
    branches:
      - main  # You can change this to any branch you want to trigger the workflow from
  workflow_dispatch:  # This allows you to trigger the workflow manually

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 'latest'
      # Initalize Terarform cred
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2
      # Step 4: Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ec2  # Path to your Terraform files

      # Step 5: Plan Terraform
      - name: Terraform Plan
        run: terraform plan
        working-directory: ec2

      # Step 6: Apply Terraform (deploy)
      # - name: Terraform Apply
      #   run: terraform apply -auto-approve
      #   working-directory: ec2

      # Step 7: Clean up Terraform resources (Destroy) only on manual trigger
      - name: Terraform Destroy (Clean Up)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: terraform destroy -auto-approve
        working-directory: ec2
        # This will only run when manually triggered via workflow_dispatch
