name: Terraform Deploy to AWS

# Trigger the workflow on push to the main branch, or via manual trigger (workflow_dispatch)
on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2  # Replace with your desired region

      # Step 3: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.4.0'  # Specify the Terraform version you want to use

      # Step 4: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 5: Plan Terraform deployment
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Step 6: Apply Terraform deployment
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      # Step 7: Clean up Terraform resources (Destroy)
      # Here we add a conditional step based on an input parameter or manual trigger
      - name: Terraform Destroy (Clean Up)
        if: ${{ github.event_name == 'workflow_dispatch' }} # This will only run when manually triggered
        run: terraform destroy -auto-approve
