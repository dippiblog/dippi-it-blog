name: Terraform Deploy to AWS

on:
  push:
    branches:
      - main  # You can change this to any branch you want to trigger the workflow from
  workflow_dispatch:  # This allows you to trigger the workflow manually

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 'latest'

    # Step 3: Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: 'us-east-1'  # You can adjust the region accordingly

    # Step 4: Initialize Terraform
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform  # Path to your Terraform files

    # Step 5: Plan Terraform
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform

    # Step 6: Apply Terraform (deploy)
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform

    # Step 7: Clean up (optional for push event)
    - name: Clean up Terraform resources (Destroy)
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: terraform destroy -auto-approve
      working-directory: ./terraform
      # This will only run when manually triggered via workflow_dispatch
